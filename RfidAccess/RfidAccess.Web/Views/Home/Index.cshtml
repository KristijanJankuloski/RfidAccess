@model ConvertedTimeSlot?
@{
    ViewData["Title"] = "Оброци";
}

<div class="text-center">
    <h1 class="display-4">Оброци</h1>
    <h2 class="display-5" id="clock"></h2>
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>Error: </strong>@TempData["Error"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    @if (Model != null)
    {
        <div class="d-flex justify-content-between mt-3">
            <div class="display-6">@Model.Start.ToShortTimeString()</div>
            <div class="display-6">@Model.End.ToShortTimeString()</div>
        </div>
        <div class="progress">
            <div class="progress-bar" id="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="0"></div>
        </div>
    }
    else
    {
        <div class="card mt-3">
            <div class="card-body">
                <h3 class="display-6">Нема активни оброци</h3>
            </div>
        </div>
    }
</div>
<script>
    const startTime = Date.parse(`@(Model?.Start.ToString("yyyy-MM-ddTHH:mm:ss.fff"))`);
    const endTime = Date.parse(`@(Model?.End.ToString("yyyy-MM-ddTHH:mm:ss.fff"))`);
    const progressBar = document.getElementById('progress-bar');
    if (progressBar) {
        progressBar.setAttribute('aria-valuemin', startTime);
        progressBar.setAttribute('aria-valuemax', endTime);
    }

    function updateClock() {
        const clockElement = document.getElementById('clock');
        const now = new Date();
        if (progressBar) {
            let nowTime = Date.parse(now);
            nowTime = Math.max(startTime, Math.min(endTime, nowTime));
            const percentage = ((nowTime - startTime) / (endTime - startTime) * 100).toFixed(2);
            if (percentage <= 30) {
                progressBar.className = "progress-bar bg-success";
            }
            else if (percentage >= 70 && percentage < 90) {
                progressBar.className = "progress-bar bg-warning";
            }
            else if (percentage >= 90) {
                progressBar.className = "progress-bar bg-danger";
            }
            else {
                progressBar.className = "progress-bar";
            }
            progressBar.style.width = `${percentage}%`;
            progressBar.setAttribute('aria-valuenow', nowTime);
        }
        const hours = now.getHours().toString().padStart(2, '0');
        const minutes = now.getMinutes().toString().padStart(2, '0');
        const seconds = now.getSeconds().toString().padStart(2, '0');

        const timeString = `${now.toDateString()} ${hours}:${minutes}:${seconds}`;

        clockElement.textContent = timeString;
    }

    setInterval(updateClock, 1000);

    updateClock();
</script>