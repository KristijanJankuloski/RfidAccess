@model TimeSlotViewModel
@{
    ViewData["Title"] = "Распоред";
    ViewData["Weekdays"] = new List<string> { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" };
}

<form method="post" asp-action="Update">
    <div class="d-flex justify-content-between align-items-center">
        <h1 class="display-5">Распоред</h1>
        <button class="btn btn-primary" type="submit"><img class="img-fluid" width="25px" src="~/img/icons/save.svg" /> Зачувај</button>
    </div>
    <div class="row">
        <div class="col-lg-3 mb-3">
            <partial name="_DayInputForm" model="@(new DayInputPartialViewModel(Model.Monday, "Monday", "Понеделник"))" />
        </div>
        <div class="col-lg-3 mb-3">
            <partial name="_DayInputForm" model="@(new DayInputPartialViewModel(Model.Tuesday, "Tuesday", "Вторник"))" />
        </div>
        <div class="col-lg-3 mb-3">
            <partial name="_DayInputForm" model="@(new DayInputPartialViewModel(Model.Wednesday, "Wednesday", "Среда"))" />
        </div>
        <div class="col-lg-3 mb-3">
            <partial name="_DayInputForm" model="@(new DayInputPartialViewModel(Model.Thursday, "Thursday", "Четврток"))" />
        </div>
        <div class="col-lg-3 mb-3">
            <partial name="_DayInputForm" model="@(new DayInputPartialViewModel(Model.Friday, "Friday", "Петок"))" />
        </div>
        <div class="col-lg-3 mb-3">
            <partial name="_DayInputForm" model="@(new DayInputPartialViewModel(Model.Saturday, "Saturday", "Сабота"))" />
        </div>
        <div class="col-lg-3 mb-3">
            <partial name="_DayInputForm" model="@(new DayInputPartialViewModel(Model.Sunday, "Sunday", "Недела"))" />
        </div>
    </div>
</form>

<script>
    let counters = {
        'Monday': @(Model.Monday.Count == 0 ? 1 : Model.Monday.Count),
        'Tuesday': @(Model.Tuesday.Count == 0 ? 1 : Model.Tuesday.Count),
        'Wednesday': @(Model.Wednesday.Count == 0 ? 1 : Model.Wednesday.Count),
        'Thursday': @(Model.Thursday.Count == 0 ? 1 : Model.Thursday.Count),
        'Friday': @(Model.Friday.Count == 0 ? 1 : Model.Friday.Count),
        'Saturday': @(Model.Saturday.Count == 0 ? 1 : Model.Saturday.Count),
        'Sunday': @(Model.Sunday.Count == 0 ? 1 : Model.Sunday.Count)
    }

    function addDayTime(day) {
        const cardBody = document.getElementById(`${day}CardBody`);
        const newFields = `
                            <div id="${day.toLowerCase()}Slot${counters[day]}" class="mb-2">
                                <span>Оброк ${counters[day] + 1}</span>
                                <button class="btn btn-sm btn-danger me-2" type="button" onclick="removeDayTime('${day}', ${counters[day]})">X</button>
                                <br>
                                <label for="${day}_Start${counters[day]}">Почеток</label>
                                <input id="${day}_Start${counters[day]}" name="${day}[${counters[day]}].Start" type="time" class="form-control mb-2" />
                                <label for="${day}_End${counters[day]}">Крај</label>
                                <input id="${day}_End${counters[day]}" name="${day}[${counters[day]}].End" type="time" class="form-control mb-2" />
                                <label for="${day}_Allow${counters[day]}">Дозволи</label>
                                <input id="${day}_Allow${counters[day]}" name="${day}[${counters[day]}].Allow" type="number" value="1" min="1" step="1" class="form-control" />
                                <hr />
                            </div>`;
        cardBody.insertAdjacentHTML('beforeend', newFields);
        counters[day]++;
    }

    function removeDayTime(day, slot) {
        if (counters[day] <= 1){
            return;
        }
        counters[day]--;
        const slotElement = document.getElementById(`${day.toLowerCase()}Slot${counters[day]}`);
        if (slotElement) {
            slotElement.remove();
        }
    }
</script>
